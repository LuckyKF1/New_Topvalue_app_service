# =============================
# Python / Django

# Ignore DB
db/

# =============================
# Cache files generated by Python
# __pycache__ folders and byte-compiled .pyc, .pyo files
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.pyc
*.swp
*.swo

# Virtual environments
# Ignore directories for virtual environments
venv/
env/
.venv/
ENV/

# Django migrations (optionally keep __init__.py)
# Ignore migration files and their compiled bytecode
*/migrations/*.pyc
*/migrations/*.pyo
*/migrations/__pycache__/

# Byte-compiled / optimized / DLL files
# Ignore Python bytecode files and platform-specific optimized files
*$py.class

# C extensions
# Ignore compiled C extension files (e.g. .so files)
*.so

# Media files
# Ignore media directories used for uploaded files
/media/
media/

/certs/
certs/

# Distribution / packaging
# Ignore build, distribution, and packaging files/folders
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Ignore files generated by PyInstaller when creating executable binaries
*.manifest
*.spec

# Installer logs
# Ignore installation logs generated by pip or other installers
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
# Ignore files generated by test frameworks like pytest, tox, or coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
# Ignore compiled translation files (e.g. .mo) and templates (.pot)
*.mo
*.pot

# Django specific files
# Ignore Django-related files such as logs and database files
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask specific files
# Ignore files related to Flask applications (e.g. instance, webassets cache)
instance/
.webassets-cache

# Scrapy specific files
# Ignore Scrapy project files
.scrapy

# Sphinx documentation
# Ignore build directories generated by Sphinx documentation tool
docs/_build/

# PyBuilder
# Ignore PyBuilder build directory
.pybuilder/
target/

# Jupyter Notebook
# Ignore Jupyter notebook checkpoint files
.ipynb_checkpoints

# IPython
# Ignore IPython profile and config files
profile_default/
ipython_config.py

# pyenv
# Ignore pyenv-specific environment version file (not needed unless using pyenv for version management)
# .python-version

# pipenv
# Ignore pipenv's dependency lock file (optional, should usually be tracked)
#Pipfile.lock

# UV
# Ignore uv.lock file (similar to Pipfile.lock, optional for binary package reproducibility)
#uv.lock

# poetry
# Ignore poetry's lock file (optional, should usually be tracked for reproducibility)
#poetry.lock

# pdm
# Ignore pdm's project and build files (optional, should usually be tracked for reproducibility)
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582 (used by pyflow and pdm)
# Ignore __pypackages__ folder used by PEP 582 for local project dependencies
__pypackages__/

# Celery specific files
# Ignore Celery schedule and process files
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
# Ignore files generated by SageMath (e.g. parsed Python files)
*.sage.py

# Environments
# Ignore backup and virtual environment files
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
# Ignore Spyder IDE's project settings files
.spyderproject
.spyproject

# Rope project settings
# Ignore Rope IDE's project settings files
.ropeproject

# mkdocs documentation
# Ignore mkdocs' build folder
/site

# mypy
# Ignore mypy's cache and configuration files
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
# Ignore Pyre's type checking files
.pyre/

# pytype static type analyzer
# Ignore pytype's cache and configuration files
.pytype/

# Cython debug symbols
# Ignore files generated by Cython for debugging
cython_debug/

# PyCharm
# JetBrains IDE configuration files (uncomment to ignore the entire project folder)
#.idea/

# Ruff stuff
# Ignore Ruff static analysis cache files
.ruff_cache/

# PyPI configuration file
# Ignore PyPI configuration file if used
.pypirc
